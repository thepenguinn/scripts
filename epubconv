#!/bin/bash

unset dirs_for_syllabus
unset dirs_for_notes
unset gen_type
unset modified_time_new

check_indexfile () {
	local indexf="$(readlink -e "$1")"
	if [[ -f  "$indexf/index.norg" ]]; then
		return 0
	else
		printf "Couldn't find index.norg in the directory: \"$indexf/\" \nExiting...\n"
		exit 1
	fi
}

check_pre_comp_notes () {

	local nmodtime
	local lmodt_file

	lmodt_file="${1%/*}/ebook/lmodt_$(basename "$1" | sed "s/.norg$//")"
	nmodtime=$(stat --printf "%Y\n" "$1")
	if [[ -f "$lmodt_file" && "$nmodtime" -le $(cat "$lmodt_file") ]]; then
		return 0
	else
		modified_time_new+="$lmodt_file@$nmodtime"$'\n'
		return 1
	fi

}

check_pre_comp_syllabus () {

	local imodtime=""
	local norgfiles=$(find "$1" -iname syllabus*.norg)
	norgfiles+=$'\n'"$1/index.norg"


	while read -r file
	do
		imodtime+=$(stat --printf "%Y\n" "$file")$'\n'
	done <<<"$norgfiles"

	imodtime=$(sort <<<"$imodtime" | tail -n 1)

	if [[ -f "$1/ebook/lmodt_syllabus" && $imodtime -le $(cat "$1/ebook/lmodt_syllabus") ]]; then
		return 0
	else
		modified_time_new+="$1/ebook/lmodt_syllabus@$imodtime"$'\n'
		return 1
	fi
}

gen_cover_img () {
	echo "wip"
}

notes_ebook () {
	while read -r dir
	do
		echo $dir
	done <<<"$@"
}

gen_notes_ebook () {
	echo hai
}

gen_syllabus_ebook () {
}

syllabus_ebook () {
}

for arg in "$@"
do
	case $arg in 
		-s)
			gen_type=syllabus
			;;
		-n)
			gen_type=notes
			;;
		-sn|-ns)
			gen_type=""
			;;
		*)
			[[ -d $arg ]] || continue
			if [[ $gen_type == "syllabus" ]]; then
				dirs_for_syllabus+="${arg}"$'\n'
			elif [[ $gen_type == "notes" ]]; then
				dirs_for_notes+="${arg}"$'\n'
			elif [[ $gen_type == "" ]]; then
				dirs_for_syllabus+="${arg}"$'\n'
				dirs_for_notes+="${arg}"$'\n'
			fi
			;;
	esac
done

syllabus_ebook "${dirs_for_syllabus}"
#notes_ebook "${dirs_for_notes}"

#!/bin/bash

work_dirs="$HOME/projects:$HOME/projects/scripts:$HOME/fun:$HOME/projects/dotfiles:$HOME/notes"

declare -A session_suffix_table

session_suffix_table+=( \
    ["projects.scripts"]="srp" \
    ["projects"]="prj" \
    ["fun"]="fun" \
    ["notes"]="nts" \
    ["projects.dotfiles"]="dot" \
)

create_general_session () {
    if ! tmux has-session -t general 2>/dev/null; then
        tmux new-session -ds general
        tmux new-window -t general
        tmux new-window -t general
        tmux send-keys -t general:2 "w3m duckduckgo.com" Enter
    fi
}

create_proot_session () {

    if ! tmux has-session -t utils:proot 2>/dev/null; then
        # there is no proot window
        if ! tmux has-session -t utils 2>/dev/null; then
            # there are no utils session
            # so create the session too
            tmux new-session -d -s utils -n proot
        else
            # just need to create the proot window
            tmux new-window -d -t utils -n proot
        fi

        tmux send-keys -t utils:proot "proot-distro login archlinux \
            --bind /data/data/com.termux/files/home:/home/daniel" Enter \
            "cd /home/daniel" Enter "/usr/sbin/sshd" Enter "su daniel" Enter \
            "printf \"\033[5A\033[31;1m  Proot Instance: Don't use this instance directly,\n      \
            instead ssh into this instance.\n\"" Enter
    fi

}

create_music_session () {

    if ! tmux has-session -t utils:music 2>/dev/null; then
        # there is no music window
        if ! tmux has-session -t utils 2>/dev/null; then
            # there are no utils session
            # so create the session too
            tmux new-session -d -s utils -n music
        else
            # just need to create the music window
            tmux new-window -d -t utils -n music
        fi
    fi
}

if [[ $1 == "gen" ]]; then
    create_proot_session
    create_general_session
    if [[ -z $TMUX ]]; then
        tmux attach -t general:0
    else
        tmux switch-client -t general:0
    fi
    exit 0
fi

if [[ $1 == "arch" ]]; then
    create_proot_session
    if [[ -z $TMUX ]]; then
        tmux attach
    fi
    tmux switch-client -t utils:proot
    exit 0
fi

if [[ $1 == "music" ]]; then
    create_music_session
    if [[ -z $TMUX ]]; then
        tmux attach
    fi
    tmux switch-client -t utils:music
    exit 0
fi

session=$(tr ":" "\n" <<<"$work_dirs" \
    | xargs -I {} find -L {} -maxdepth 1 -type d \
    | sed "1d" \
    | fzf)

if [[ -z $session ]]; then
    last_session=$(tmux display-message -p "#{@_last_session}")
    if [[ ! -z $last_session ]]; then
        tmux switch-client -t$last_session
    fi
    exit 1
fi

is_tmux_running=$(pgrep tmux)

# if tmux is running check for the session
# if session exist switch to the session
# else start the session and switch to it

session_name=$(basename "$session" | tr " " "_")

parent_from_home=$(sed "s#^${HOME}/##" <<<"$session")
parent_from_home=${parent_from_home%/*}
suffix_hash=$(tr "/" "." <<<"$parent_from_home")

if [[ ! -z "${session_suffix_table[${suffix_hash}]}" ]]; then
    session_name="${session_name}-${session_suffix_table[${suffix_hash}]}"
else
    session_name="${session_name}-$(tr "." "_" <<<"$suffix_hash")"
fi

create_session () {
    cd "$HOME/${parent_from_home}/$(basename "$session")"
    tmux new-session -ds $session_name
    if [ -f $HOME/.config/tss/startup/$session_name ]; then
        # running the start up script for this session, if it exists.
        # first arg will be the $session_name second will be the relative
        # path from home
        . $HOME/.config/tss/startup/$session_name $session_name "${parent_from_home}/$(basename "$session")"
    else
        # else 0th window will be the terminal
        # and 1st will be the nvim
        tmux new-window -t$session_name
        tmux send-keys -t$session_name:1 "nvim" Enter
        tmux new-window -t$session_name
        tmux send-keys -t$session_name:2 "w3m duckduckgo.com" Enter

        # switching to the 0th window, if you want to switch to a different
        # window write a startup script for the session
        tmux switch-client -t$session_name:0
    fi

}

if [[ ! -z $TMUX || ! -z $is_tmux_running ]]; then
    # tmux is running
    echo tmux is running
    if ! tmux has-session -t$session_name 2>/dev/null; then
        create_session
    fi

    if [[ -z $TMUX ]]; then
        tmux attach
    fi

else
    # tmux is not running
    echo tmux is not running
    create_session
    tmux attach
fi

tmux switch-client -t$session_name
tmux previous-layout

exit 0
